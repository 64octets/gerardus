//ImageTypes
(FixedInternalImagePixelType "float")
(FixedImageDimension 2)
(MovingInternalImagePixelType "float")
(MovingImageDimension 2)

//Components
(Registration "MultiMetricMultiResolutionRegistration")
(FixedImagePyramid "FixedSmoothingImagePyramid" "FixedSmoothingImagePyramid" "FixedSmoothingImagePyramid")
(MovingImagePyramid "MovingSmoothingImagePyramid" "MovingSmoothingImagePyramid" "MovingSmoothingImagePyramid")
(Interpolator "LinearInterpolator" "LinearInterpolator" "LinearInterpolator")
(Metric "AdvancedMeanSquares" "AdvancedMeanSquares" "AdvancedMeanSquares")
(Optimizer "RegularStepGradientDescent")
(ResampleInterpolator "FinalLinearInterpolator")
(Resampler "DefaultResampler" "DefaultResampler" "DefaultResampler")
(Transform "BSplineTransform")
(BSplineTransformSplineOrder 3)
(UseDirectionCosines "true")
(UseCyclicTransform "false")

// Initial alignment of the images
(AutomaticTransformInitialization "false")
(AutomaticTransformInitializationMethod "GeometricalCenter")

// Erosion of the mask prevents the border / edge of the mask taken
// into account. This can be useful for example for ultrasound images,
// where you don't want to take into account values outside the US-beam,
// but where you also don't want to match the edge / border of this
// beam. For example for MRI's of the head, the borders of the head may
// be wanted to match, and there erosion should be avoided.  
(ErodeMask "false")

// Number of levels in the multi-resolution pyramid strategy
(NumberOfResolutions 3)
(ImagePyramidSchedule 16 16 4 4 1 1)

// the grid spacing of the B-spline transform for each dimension
(FinalGridSpacingInVoxels 400)
(GridSpacingSchedule 16 16 4 4 1 1)

(HowToCombineTransforms "Compose")

// width of a band of control points at the border of the B-spline 
// coefficient image that should remain passive during optimisation.
// Can be specified for each resolution. The default is zero for 
// all resolutions. A value of 4 will avoid all deformations at the 
// edge of the image. Make sure that 
// 2*PassiveEdgeWidth < ControlPointGridSize in each dimension.
//(PassiveEdgeWidth 4)

// Optimizer parameters

// Maximum number of iterations in each resolution level
//(MaximumNumberOfIterations 2000)
// SP: Param_a in each resolution level. a_k = a/(A+k+1)^alpha
//(SP_a 400.0)
// SP: Param_A in each resolution level. a_k = a/(A+k+1)^alpha
//(SP_A 200.0)
// SP: Param_alpha in each resolution level. a_k = a/(A+k+1)^alpha
//(SP_alpha 0.602)

//Maximum step size of the RSGD optimizer for each resolution level.
// The higher you set this, the more aggressive steps are taken.
//(MaximumStepLength 4.0 2.0 2.0)
(MaximumStepLength 6.25 25.0 100.0)

//Minimum step size of the RSGD optimizer for each resolution level.
// The lower you set this, the more accurate the final result.
//(MinimumStepLength 0.5 0.05 0.05)
(MinimumStepLength 1.6 0.4 0.1)

//Minimum magnitude of the gradient (stopping criterion) for the RSGD optimizer:
// The lower you set this, the more accurate the final result may be.
//(MinimumGradientMagnitude 0.00000001 0.00000001 0.00000001)
(MinimumGradientMagnitude 1.6 0.4 0.1)

// Number of grey level bins in each resolution level:
(NumberOfHistogramBins 128)
(FixedLimitRangeRatio 0.0)
(MovingLimitRangeRatio 0.0)
//(FixedKernelBSplineOrder 3)
//(MovingKernelBSplineOrder 3)

// Number of spatial samples used to compute the mutual information in
// each resolution level:

// "RandomCoordinate" works well with the StandardGradientDescent and
// AdaptiveStochasticGradientDescent optimisers,
//(ImageSampler "Full" "Full" "Full")
(ImageSampler "RandomCoordinate" "RandomCoordinate" "RandomCoordinate")
(NewSamplesEveryIteration "true")
(NumberOfSpatialSamples 0 0 0)
(MaximumNumberOfSamplingAttempts 10)
(FixedImageBSplineInterpolationOrder 1)
(UseRandomSampleRegion "false")
//(SampleRegionSize 50.0) // (mm)
//(CheckNumberOfSamples "true")

(UseFastAndLowMemoryVersion "true")
(UseJacobianPreconditioning "false")
(FiniteDifferenceDerivative "false")

// Default pixel value for pixels that come from outside the picture:
(DefaultPixelValue 0)

// Output
(WriteResultImage "true")
(WriteResultImageAfterEachResolution "false")
(WriteTransformParametersEachIteration "false")
(WriteTransformParametersEachResolution "true")
(ResultImagePixelType "unsigned char")
(ResultImageFormat "png")
(CompressResultImage "true")
